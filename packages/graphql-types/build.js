module.exports=function(e){var n={};function i(a){if(n[a])return n[a].exports;var t=n[a]={i:a,l:!1,exports:{}};return e[a].call(t.exports,t,t.exports,i),t.l=!0,t.exports}return i.m=e,i.c=n,i.d=function(e,n,a){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(i.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)i.d(a,t,function(n){return e[n]}.bind(null,t));return a},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=1)}([function(e,n,i){var a={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[]},{kind:"SchemaDefinition",directives:[],operationTypes:[{kind:"OperationTypeDefinition",operation:"query",type:{kind:"NamedType",name:{kind:"Name",value:"Query"}}},{kind:"OperationTypeDefinition",operation:"mutation",type:{kind:"NamedType",name:{kind:"Name",value:"Mutation"}}}]}],loc:{start:0,end:457}};a.loc.source={body:'#import "./types/Account.graphql"\n#import "./types/Address.graphql"\n#import "./types/Connection.graphql"\n#import "./types/Contact.graphql"\n#import "./types/ExternalAccount.graphql"\n#import "./types/Node.graphql"\n#import "./types/Party.graphql"\n#import "./types/Scalars.graphql"\n#import "./types/Transaction.graphql"\n#import "./types/Transfer.graphql"\n#import "./types/User.graphql"\n\ntype Query\n\ntype Mutation\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!t[n]&&(t[n]=!0,!0)}))}a.definitions=a.definitions.concat(d(i(2).definitions)),a.definitions=a.definitions.concat(d(i(3).definitions)),a.definitions=a.definitions.concat(d(i(4).definitions)),a.definitions=a.definitions.concat(d(i(5).definitions)),a.definitions=a.definitions.concat(d(i(6).definitions)),a.definitions=a.definitions.concat(d(i(7).definitions)),a.definitions=a.definitions.concat(d(i(8).definitions)),a.definitions=a.definitions.concat(d(i(9).definitions)),a.definitions=a.definitions.concat(d(i(10).definitions)),a.definitions=a.definitions.concat(d(i(11).definitions)),a.definitions=a.definitions.concat(d(i(12).definitions)),e.exports=a},function(e,n,i){"use strict";i.r(n);var a=i(0),t=i.n(a);n.default=t.a},function(e,n){var i={kind:"Document",definitions:[{kind:"EnumTypeDefinition",name:{kind:"Name",value:"AccountType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"CHECKING"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"SAVINGS"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"LOAN"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"CREDIT_CARD"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"LINE_OF_CREDIT"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"MORTGAGE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"INVESTMENT"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PRE_PAID_CARD"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"CERTIFICATE"},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"Account"},directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"The account ID is a persistent and unique identifier for the account.\nIt must be unique for all users across the institution and remain the\nsame over the life of the account.",block:!0},name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The account number (or a masked portion there-of) will be displayed to the\nuser. Like the ID, it must be unique for all users across the institution\nand remain the same over the life of the account. It may contain a prefix to\ndefine the Account Type for consumption, such as SV-1234 or IL-1234.",block:!0},name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"A masked version of the account number.",block:!0},name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The account name is the textual representation of the account. This\nvalue is visible to the user and must be human-readable.",block:!0},name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Negative, zero or positive amount. If this is a loan, any balance owed to\nthe financial institution will show as a positive amount. If this is a\ndeposit product, if the product is overdrawn it will be a negative amount.\nPositive is assumed if the sign does not appear in the data.",block:!0},name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Negative, zero or positive amount. If this is a loan, any balance owed\nto the financial institution will show as a positive amount. If this is\na deposit product, if the product is overdrawn it will be a negative amount.\nPositive is assumed if the sign does not appear in the data.",block:!0},name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The transactions for this account",block:!0},name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"InternalAccount"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"This is a human-friendly description of the account type. It also provides a way\nto present provider-specific names that may not fit in a pre-defined list, such as\n'Special Savings'.",block:!0},name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"InterestBearingAccount"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"apy"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"CheckingAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},{kind:"NamedType",name:{kind:"Name",value:"InterestBearingAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"apy"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"SavingsAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},{kind:"NamedType",name:{kind:"Name",value:"InterestBearingAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Number of remaining transactions according to [Reg D](https://en.wikipedia.org/wiki/Regulation_D_(FRB)).",block:!0},name:{kind:"Name",value:"regDRemaining"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"apy"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"CertificateAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},{kind:"NamedType",name:{kind:"Name",value:"InterestBearingAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"apy"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"InvestmentAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"LoanPayment"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"nextDueDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"amount"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"AbstractLoanAccount"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"apr"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nextPayment"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"LoanPayment"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"originationDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"payoff"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"secured"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"LoanAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},{kind:"NamedType",name:{kind:"Name",value:"AbstractLoanAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"apr"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nextPayment"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"LoanPayment"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"originationDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"secured"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"payoff"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"OpenLoanAccount"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"limit"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"LineOfCreditAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},{kind:"NamedType",name:{kind:"Name",value:"AbstractLoanAccount"}},{kind:"NamedType",name:{kind:"Name",value:"OpenLoanAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"apr"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nextPayment"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"LoanPayment"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"limit"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"secured"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"originationDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"payoff"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"CreditCardAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}},{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},{kind:"NamedType",name:{kind:"Name",value:"AbstractLoanAccount"}},{kind:"NamedType",name:{kind:"Name",value:"OpenLoanAccount"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AccountType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"typeDescription"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed from this account.",block:!0},name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Whether transfers are allowed to this account.",block:!0},name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"apr"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nextPayment"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"LoanPayment"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"limit"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"secured"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"originationDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"payoff"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]}]}],loc:{start:0,end:8423}};i.loc.source={body:'enum AccountType {\n  CHECKING\n  SAVINGS\n  LOAN\n  CREDIT_CARD\n  LINE_OF_CREDIT\n  MORTGAGE\n  INVESTMENT\n  PRE_PAID_CARD\n  CERTIFICATE\n}\n\ninterface Account {\n  """\n  The account ID is a persistent and unique identifier for the account.\n  It must be unique for all users across the institution and remain the\n  same over the life of the account.\n  """\n  id: ID!\n\n  """\n  The account number (or a masked portion there-of) will be displayed to the\n  user. Like the ID, it must be unique for all users across the institution\n  and remain the same over the life of the account. It may contain a prefix to\n  define the Account Type for consumption, such as SV-1234 or IL-1234.\n  """\n  accountNumber: String\n\n  """\n  A masked version of the account number.\n  """\n  accountNumberMasked: String\n\n  """\n  The account name is the textual representation of the account. This\n  value is visible to the user and must be human-readable.\n  """\n  name: String\n\n  nickname: String\n\n  """\n  Negative, zero or positive amount. If this is a loan, any balance owed to\n  the financial institution will show as a positive amount. If this is a\n  deposit product, if the product is overdrawn it will be a negative amount.\n  Positive is assumed if the sign does not appear in the data.\n  """\n  actualBalance: Float\n\n  """\n  Negative, zero or positive amount. If this is a loan, any balance owed\n  to the financial institution will show as a positive amount. If this is\n  a deposit product, if the product is overdrawn it will be a negative amount.\n  Positive is assumed if the sign does not appear in the data.\n  """\n  availableBalance: Float\n\n  """\n  The transactions for this account\n  """\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n}\n\ninterface InternalAccount {\n  id: ID!\n  name: String\n  nickname: String\n  accountNumber: String\n  accountNumberMasked: String\n  actualBalance: Float\n  availableBalance: Float\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n  transferFrom: Boolean\n  transferTo: Boolean\n\n  type: AccountType\n\n  """\n  This is a human-friendly description of the account type. It also provides a way\n  to present provider-specific names that may not fit in a pre-defined list, such as\n  \'Special Savings\'.\n  """\n  typeDescription: String\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  message: Message\n}\n\ninterface InterestBearingAccount {\n  apy: Float\n}\n\ntype CheckingAccount implements Account & InternalAccount & InterestBearingAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  message: Message\n\n  apy: Float\n}\n\ntype SavingsAccount implements Account & InternalAccount & InterestBearingAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n  message: Message\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  """\n  Number of remaining transactions according to [Reg D](https://en.wikipedia.org/wiki/Regulation_D_(FRB)).\n  """\n  regDRemaining: Int\n\n  apy: Float\n}\n\ntype CertificateAccount implements Account & InternalAccount & InterestBearingAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n  message: Message\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  apy: Float\n}\n\ntype InvestmentAccount implements Account & InternalAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  message: Message\n}\n\ntype LoanPayment {\n  nextDueDate: Date\n  amount: Float\n}\n\ninterface AbstractLoanAccount {\n  apr: Float\n  nextPayment: LoanPayment\n  originationDate: Date\n  payoff: Float\n  secured: Boolean\n}\n\ntype LoanAccount implements Account & InternalAccount & AbstractLoanAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n  message: Message\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  apr: Float\n  nextPayment: LoanPayment\n  originationDate: Date\n  secured: Boolean\n  payoff: Float\n}\n\ninterface OpenLoanAccount {\n  limit: Float\n}\n\ntype LineOfCreditAccount implements Account & InternalAccount & AbstractLoanAccount & OpenLoanAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n  message: Message\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  apr: Float\n  nextPayment: LoanPayment\n  limit: Float\n  secured: Boolean\n  originationDate: Date\n  payoff: Float\n}\n\ntype CreditCardAccount implements Account & InternalAccount & AbstractLoanAccount & OpenLoanAccount {\n  id: ID!\n  accountNumber: String\n  accountNumberMasked: String\n  name: String\n  nickname: String\n  type: AccountType\n  typeDescription: String\n  actualBalance: Float\n  availableBalance: Float\n  routingNumber: String\n  message: Message\n\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n\n  """\n  Whether transfers are allowed from this account.\n  """\n  transferFrom: Boolean\n\n  """\n  Whether transfers are allowed to this account.\n  """\n  transferTo: Boolean\n\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection\n\n  apr: Float\n  nextPayment: LoanPayment\n  limit: Float\n  secured: Boolean\n  originationDate: Date\n  payoff: Float\n}\n\nextend type Query {\n  account(id: ID!): Account\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"EnumTypeDefinition",name:{kind:"Name",value:"AddressType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"HOME"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"MAILING"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"WORK"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"TEMPORARY"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PREVIOUS"},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"AddressInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"street1"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"street2"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"city"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"state"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"zipCode"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Address"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"AddressType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"street1"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"street2"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"city"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"state"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"zipCode"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"latitude"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"longitude"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]}]}],loc:{start:0,end:345}};i.loc.source={body:"enum AddressType {\n  HOME\n  MAILING\n  WORK\n  TEMPORARY\n  PREVIOUS\n}\n\ninput AddressInput {\n  street1: String!\n  street2: String\n  city: String!\n  state: String!\n  zipCode: String!\n}\n\ntype Address {\n  type: AddressType\n  street1: String!\n  street2: String\n  city: String!\n  state: String!\n  zipCode: String!\n  latitude: Float\n  longitude: Float\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"PageInfo"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"endCursor"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"hasPreviousPage"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"hasNextPage"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]}],loc:{start:0,end:88}};i.loc.source={body:"type PageInfo {\n  endCursor: String\n  hasPreviousPage: Boolean\n  hasNextPage: Boolean\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"EnumTypeDefinition",name:{kind:"Name",value:"ContactType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"ADDRESS"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PHONE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"EMAIL"},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"ContactPoint"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"ContactType"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"ContactAddress"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"ContactPoint"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"ContactType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"address"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Address"}},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"PhoneType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"HOME"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"WORK"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"MOBILE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PAGER"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"FAX"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"OTHER"},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"ContactPhone"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"ContactPoint"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"ContactType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"phoneType"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PhoneType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"number"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"extension"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"description"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Phone number is registered to receive SMS messages.",block:!0},name:{kind:"Name",value:"smsRegistered"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"EmailType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"HOME"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"WORK"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"OTHER"},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"ContactEmail"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"ContactPoint"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"ContactType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"emailType"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"EmailType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"emailAddress"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"This identifies that appropriate access has been demonstrated to receive information\nelectronically for the associated contact point.",block:!0},name:{kind:"Name",value:"DemonstratedAccess"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"dateTime"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Date"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"userId"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Contact"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Node"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"ContactType"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"contactPoint"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ContactPoint"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"demonstratedAccess"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"DemonstratedAccess"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ContactPointInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"type"},type:{kind:"NamedType",name:{kind:"Name",value:"ContactType"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"address"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"fullAddress"},type:{kind:"NamedType",name:{kind:"Name",value:"AddressInput"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"contactAddEmail"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"emailAddress"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"contactAddPhone"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"number"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"contactAddAddress"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"address"},type:{kind:"NamedType",name:{kind:"Name",value:"AddressInput"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"updateContact"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"contactPoint"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ContactPointInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}},directives:[]}]}],loc:{start:0,end:1320}};i.loc.source={body:'enum ContactType {\n  ADDRESS\n  PHONE\n  EMAIL\n}\n\ninterface ContactPoint {\n  type: ContactType\n}\n\ntype ContactAddress implements ContactPoint {\n  type: ContactType\n  address: Address\n}\n\nenum PhoneType {\n  HOME\n  WORK\n  MOBILE\n  PAGER\n  FAX\n  OTHER\n}\n\ntype ContactPhone implements ContactPoint {\n  type: ContactType\n  phoneType: PhoneType!\n  number: String!\n  extension: String\n  description: String\n\n  """\n  Phone number is registered to receive SMS messages.\n  """\n  smsRegistered: Boolean\n}\n\nenum EmailType {\n  HOME\n  WORK\n  OTHER\n}\n\ntype ContactEmail implements ContactPoint {\n  type: ContactType\n  emailType: EmailType!\n  emailAddress: String!\n}\n\n"""\nThis identifies that appropriate access has been demonstrated to receive information\nelectronically for the associated contact point.\n"""\ntype DemonstratedAccess {\n  dateTime: Date!\n  userId: ID!\n}\n\ntype Contact implements Node {\n  id: ID!\n  type: ContactType\n  contactPoint: ContactPoint!\n  demonstratedAccess: DemonstratedAccess\n}\n\ninput ContactPointInput {\n  type: ContactType\n  address: String\n  fullAddress: AddressInput\n}\n\nextend type Mutation {\n  contactAddEmail(emailAddress: String): Contact\n  contactAddPhone(number: String): Contact\n  contactAddAddress(address: AddressInput): Contact\n\n  updateContact(id: ID!, contactPoint: ContactPointInput!): Contact\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"ExternalAccount"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Account"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"routingNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accountNumberMasked"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"actualBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"availableBalance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transactionConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"categoryId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"query"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionConnection"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferFrom"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transferTo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]}],loc:{start:0,end:420}};i.loc.source={body:"type ExternalAccount implements Account {\n  id: ID!\n  name: String!\n  nickname: String\n  routingNumber: String\n  routingNumberMasked: String\n  accountNumber: String\n  accountNumberMasked: String\n  actualBalance: Float\n  availableBalance: Float\n  transactionConnection(\n    limit: Int = 10\n    categoryId: ID\n    query: String\n    cursor: String\n  ): TransactionConnection\n  transferFrom: Boolean\n  transferTo: Boolean\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"Node"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"node"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"type"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Node"}},directives:[]}]}],loc:{start:0,end:89}};i.loc.source={body:"interface Node {\n  id: ID!\n}\n\nextend type Query {\n  node(id: ID!, type: String!): Node\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"InterfaceTypeDefinition",description:{kind:"StringValue",value:"The Party defines all the fields necessary to define a person or organization related to a financial institution.",block:!0},name:{kind:"Name",value:"Party"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accounts"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Account"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"contacts"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Person"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Party"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accounts"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Account"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"List of how the person can be contacted",block:!0},name:{kind:"Name",value:"contacts"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"firstName"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"lastName"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The person's full name",block:!0},name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The person's primary email address, which should also be represented in the `contacts`",block:!0},name:{kind:"Name",value:"email"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The person's primary phone number, which should also be represented in the `contacts`.",block:!0},name:{kind:"Name",value:"phoneNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Organization"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Party"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accounts"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Account"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"List of how the organization can be contacted",block:!0},name:{kind:"Name",value:"contacts"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Contact"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Update the address associated with the current user",block:!0},name:{kind:"Name",value:"updateAddress"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"type"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"address"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AddressInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Address"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Update the address for a specific party",block:!0},name:{kind:"Name",value:"updatePartyAddress"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"partyId"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"type"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"address"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AddressInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Address"}},directives:[]}]}],loc:{start:0,end:1247}};i.loc.source={body:'"""\nThe Party defines all the fields necessary to define a person or organization related to a financial institution.\n"""\ninterface Party {\n  id: ID!\n  accounts: [Account]\n  account(id: ID!): Account\n  contacts: [Contact]\n  name: String\n}\n\ntype Person implements Party {\n  id: ID!\n  accounts: [Account]\n  account(id: ID!): Account\n  """\n  List of how the person can be contacted\n  """\n  contacts: [Contact]\n  firstName: String!\n  lastName: String!\n  """\n  The person\'s full name\n  """\n  name: String\n  """\n  The person\'s primary email address, which should also be represented in the `contacts`\n  """\n  email: String\n\n  """\n  The person\'s primary phone number, which should also be represented in the `contacts`.\n  """\n  phoneNumber: String\n}\n\ntype Organization implements Party {\n  id: ID!\n  accounts: [Account]\n  account(id: ID!): Account\n  """\n  List of how the organization can be contacted\n  """\n  contacts: [Contact]\n  name: String!\n}\n\nextend type Mutation {\n  """\n  Update the address associated with the current user\n  """\n  updateAddress(type: String, address: AddressInput!): Address\n\n  """\n  Update the address for a specific party\n  """\n  updatePartyAddress(\n    partyId: ID!\n    type: String\n    address: AddressInput!\n  ): Address\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"ScalarTypeDefinition",name:{kind:"Name",value:"Date"},directives:[]},{kind:"ScalarTypeDefinition",name:{kind:"Name",value:"DateTime"},directives:[]}],loc:{start:0,end:28}};i.loc.source={body:"scalar Date\nscalar DateTime\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Category"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Merchant"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"address"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Address"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"logoUrl"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"websiteUrl"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"updatedAt"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"TransactionStatus"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"POSTED"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PENDING"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"DENIED"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"VOID"},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"TransactionSource"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"ACH"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"ATM"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"BILL_PAY"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"BULK_DEPOSIT"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"CARD_NOT_PRESENT"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"CASH"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"CHECK"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"FEE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"HOME_BANKING"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"INSURANCE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"INTEREST_EARNED"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"INTEREST_PAID"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"INTEREST_REFUND"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"IVR"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"KIOSK"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"MOBILE_BANKING"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"OTHER"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PAYROLL"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"PIN_PURCHASE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"SHARED_BRANCH"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"SIGNATURE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"WIRE"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"WITHHOLDING"},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"TransactionType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"CREDIT"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"DEBIT"},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Message"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"messageMarkdown"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"url"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Transaction"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"The transaction ID is a persistent and unique identifier for each\ntransaction. It must be unique within the account as it is used for matching\npurposes. Transactions should always be returned with the same ID, even if\ntransactional information has changed (type, amount, description, date,\netc.) since the previous account data pull.",block:!0},name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The date/time posted is the date the transaction was posted to the account.\nIf this date is unavailable, it is acceptable to use the date that the\ntransaction took place",block:!0},name:{kind:"Name",value:"date"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The description represents the memo of the transaction.",block:!0},name:{kind:"Name",value:"description"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The transaction amount should always be the absolute value of the\ntransaction. The sign of the amount will be determined based on the\ntransaction type.",block:!0},name:{kind:"Name",value:"amount"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Float"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The transaction type simply reflects whether the account was debited or\ncredited. For comment-only transactions, the value can be either Debit or\nCredit and the transaction amount can be null, not return or 0.00.",block:!0},name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransactionType"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The running balance of this transaction's account.",block:!0},name:{kind:"Name",value:"balance"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The current status of the transaction. This may be part of a session or\nafter the session has ended.",block:!0},name:{kind:"Name",value:"status"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionStatus"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Category"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"merchant"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Merchant"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"source"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"TransactionSource"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"TransactionEdge"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"cursor"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"node"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Transaction"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"TransactionConnection"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"edges"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"TransactionEdge"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"pageInfo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"PageInfo"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Category"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"transaction"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Transaction"}},directives:[]}]}],loc:{start:0,end:2361}};i.loc.source={body:'type Category {\n  id: ID!\n  name: String!\n}\n\ntype Merchant {\n  id: ID!\n  name: String!\n  address: Address\n  logoUrl: String\n  websiteUrl: String\n  createdAt: DateTime\n  updatedAt: DateTime\n}\n\nenum TransactionStatus {\n  POSTED\n  PENDING\n  DENIED\n  VOID\n}\n\nenum TransactionSource {\n  ACH\n  ATM\n  BILL_PAY\n  BULK_DEPOSIT\n  CARD_NOT_PRESENT\n  CASH\n  CHECK\n  FEE\n  HOME_BANKING\n  INSURANCE\n  INTEREST_EARNED\n  INTEREST_PAID\n  INTEREST_REFUND\n  IVR\n  KIOSK\n  MOBILE_BANKING\n  OTHER\n  PAYROLL\n  PIN_PURCHASE\n  SHARED_BRANCH\n  SIGNATURE\n  WIRE\n  WITHHOLDING\n}\n\nenum TransactionType {\n  CREDIT\n  DEBIT\n}\n\ntype Message {\n  messageMarkdown: String\n  url: String\n}\n\ntype Transaction {\n  """\n  The transaction ID is a persistent and unique identifier for each\n  transaction. It must be unique within the account as it is used for matching\n  purposes. Transactions should always be returned with the same ID, even if\n  transactional information has changed (type, amount, description, date,\n  etc.) since the previous account data pull.\n  """\n  id: ID!\n\n  """\n  The date/time posted is the date the transaction was posted to the account.\n  If this date is unavailable, it is acceptable to use the date that the\n  transaction took place\n  """\n  date: DateTime!\n\n  """\n  The description represents the memo of the transaction.\n  """\n  description: String!\n\n  """\n  The transaction amount should always be the absolute value of the\n  transaction. The sign of the amount will be determined based on the\n  transaction type.\n  """\n  amount: Float!\n\n  """\n  The transaction type simply reflects whether the account was debited or\n  credited. For comment-only transactions, the value can be either Debit or\n  Credit and the transaction amount can be null, not return or 0.00.\n  """\n  type: TransactionType!\n\n  """\n  The running balance of this transaction\'s account.\n  """\n  balance: Float\n\n  """\n  The current status of the transaction. This may be part of a session or\n  after the session has ended.\n  """\n  status: TransactionStatus\n\n  category: Category\n\n  merchant: Merchant\n\n  message: Message\n\n  account: Account\n\n  source: TransactionSource\n}\n\ntype TransactionEdge {\n  cursor: String\n  node: Transaction!\n}\n\ntype TransactionConnection {\n  edges: [TransactionEdge]\n  pageInfo: PageInfo\n}\n\nextend type Query {\n  category(id: ID): Category\n  transaction(id: ID!): Transaction\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Transfer"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"source"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"destination"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"amount"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Float"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"frequency"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"startDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"endDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nextScheduledTransferDate"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"TransferAccountType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"INTERNAL"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"EXTERNAL"},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"TransferAccountInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"type"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferAccountType"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"TransferInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"source"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferAccountInput"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"destination"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferAccountInput"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"amount"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Float"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"frequency"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"startDate"},type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"endDate"},type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"TransferEdge"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"cursor"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"node"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Transfer"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"TransferConnection"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"edges"},arguments:[],type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferEdge"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"pageInfo"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"PageInfo"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"User"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"transferConnection"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"limit"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cursor"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferConnection"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"transfer"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Transfer"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Create a transfer",block:!0},name:{kind:"Name",value:"createTransfer"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"transfer"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Transfer"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Update a transfer",block:!0},name:{kind:"Name",value:"updateTransfer"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"transfer"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TransferInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Transfer"}},directives:[]}]}],loc:{start:0,end:1007}};i.loc.source={body:'type Transfer {\n  id: ID!\n\n  # The source account\n  source: Account\n\n  # The destination account\n  destination: Account\n\n  amount: Float!\n\n  frequency: String\n\n  startDate: Date\n  endDate: Date\n\n  nextScheduledTransferDate: Date\n}\n\nenum TransferAccountType {\n  INTERNAL\n  EXTERNAL\n}\n\ninput TransferAccountInput {\n  type: TransferAccountType!\n  id: ID!\n}\n\ninput TransferInput {\n  source: TransferAccountInput!\n  destination: TransferAccountInput!\n  amount: Float!\n  frequency: String\n  startDate: Date\n  endDate: Date\n}\n\ntype TransferEdge {\n  cursor: String\n  node: Transfer!\n}\n\ntype TransferConnection {\n  edges: [TransferEdge]\n  pageInfo: PageInfo\n}\n\nextend type User {\n  transferConnection(limit: Int = 10, cursor: String): TransferConnection!\n}\n\nextend type Query {\n  transfer(id: ID!): Transfer\n}\n\nextend type Mutation {\n  """\n  Create a transfer\n  """\n  createTransfer(transfer: TransferInput!): Transfer\n\n  """\n  Update a transfer\n  """\n  updateTransfer(id: ID!, transfer: TransferInput!): Transfer\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n){var i={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"User"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"The user ID is persistent and unique across the institution and remains the\nsame over the life of the user.",block:!0},name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:'The `relationship` represents the user\'s relationship(s) to the FI. It exists as a separate type\nfrom "User" and accepts an optional `relationshipId` because some banking systems allow users\nto have access to multiple "accounts", which then have "subaccounts". We attempt to reduce\nthis confusion by referring to each of those "accounts" as separate "relationships" and referring\nto the "subaccounts" as "accounts".',block:!0},name:{kind:"Name",value:"relationship"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"relationshipId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Relationship"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"relationships"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Relationship"}}}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:'The `customer` represents the user\'s role as a customer of the FI. It exists as a separate type\nfrom "User" and accepts an optional `customerId` because some banking systems allow users\nto have access to multiple "accounts", which then have "subaccounts". We attempt to reduce\nthis confusion by referring to each of those "accounts" as separate "customers" and referring\nto the "subaccounts" as "accounts".',block:!0},name:{kind:"Name",value:"customer"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"customerId"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Customer"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Customers this user has access to.",block:!0},name:{kind:"Name",value:"customers"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Customer"}}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"party"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Party"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"This is the date the user either joined or was created within the system.",block:!0},name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"A `Relationship` is a distinct set of accounts (and agreements) between a specific\nperson or company and a financial institution. For example, a person may have a\ngroup of accounts that are shared with a spouse while also having independent\naccounts for a sole proprietorship. That same person may also have access to the\naccounts of a corporation which are associated via another relationship.",block:!0},name:{kind:"Name",value:"Relationship"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"nickname"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accounts"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"primary"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Customer"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"accounts"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"account"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"InternalAccount"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"representative"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Party"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"me"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[]}]}],loc:{start:0,end:2058}};i.loc.source={body:'type User {\n  """\n  The user ID is persistent and unique across the institution and remains the\n  same over the life of the user.\n  """\n  id: ID!\n\n  """\n  The `relationship` represents the user\'s relationship(s) to the FI. It exists as a separate type\n  from "User" and accepts an optional `relationshipId` because some banking systems allow users\n  to have access to multiple "accounts", which then have "subaccounts". We attempt to reduce\n  this confusion by referring to each of those "accounts" as separate "relationships" and referring\n  to the "subaccounts" as "accounts".\n  """\n  relationship(relationshipId: ID): Relationship\n\n  relationships: [Relationship!]!\n\n  """\n  The `customer` represents the user\'s role as a customer of the FI. It exists as a separate type\n  from "User" and accepts an optional `customerId` because some banking systems allow users\n  to have access to multiple "accounts", which then have "subaccounts". We attempt to reduce\n  this confusion by referring to each of those "accounts" as separate "customers" and referring\n  to the "subaccounts" as "accounts".\n  """\n  customer(customerId: ID): Customer\n\n  """\n  Customers this user has access to.\n  """\n  customers: [Customer!]!\n\n  party: Party!\n\n  """\n  This is the date the user either joined or was created within the system.\n  """\n  createdAt: DateTime!\n}\n\n"""\nA `Relationship` is a distinct set of accounts (and agreements) between a specific\nperson or company and a financial institution. For example, a person may have a\ngroup of accounts that are shared with a spouse while also having independent\naccounts for a sole proprietorship. That same person may also have access to the\naccounts of a corporation which are associated via another relationship.\n"""\ntype Relationship {\n  id: ID!\n  nickname: String\n  accounts: [InternalAccount!]!\n  account(id: ID!): InternalAccount\n  primary: Boolean!\n}\n\ntype Customer {\n  id: ID!\n  name: String!\n  accounts: [InternalAccount!]!\n  account(id: ID!): InternalAccount\n  representative: Party!\n}\n\nextend type Query {\n  me: User\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i}]);