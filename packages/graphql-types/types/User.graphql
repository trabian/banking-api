type User {
  """
  The user ID is persistent and unique across the institution and remains the
  same over the life of the user.
  """
  id: ID!

  """
  When the `relationshipId` is absent or undefined, the user's `primary` relationship
  is used.
  """
  relationship(relationshipId: ID): Relationship

  relationships: [Relationship!]!

  party: Party!

  """
  This is the date the user either joined or was created within the system.
  """
  createdAt: DateTime!
}

"""
A `Relationship` is a distinct set of accounts (and agreements) between a specific
person or company and a financial institution. For example, a person may have a
group of accounts that are shared with a spouse while also having independent
accounts for a sole proprietorship. That same person may also have access to the
accounts of a corporation which are associated via another relationship.
"""
type Relationship {
  id: ID!
  nickname: String
  accounts: [Account!]!
  account(id: ID!): Account
  primary: Boolean!
}

extend type Query {
  me: User
}
